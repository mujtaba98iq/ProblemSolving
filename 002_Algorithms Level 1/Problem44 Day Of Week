--solving problem 44 My solution:
#include <iostream>
#include <string>

using namespace std;



int ReadPositiveNumber(string Message) {
	int Number = 0 ;
	while (Number <=0)
	{
		cout << Message;
		cin >> Number;
	}
	return Number;
}

void PrintTheDay(int Day) {
	switch (Day)
	{
	case 1:
		cout << "It's SunDay";
		
	case 2:
		cout << "It's MonDay";
		
	case 3:
		cout << "It's TuesDay";
		
	case 4:
		cout << "It's WensDay";
		

	case 5:
		cout << "It's ThursDay";
		
	case 6:
		cout << "It's FriDay";
		
	case 7:
		cout << "It's SaturDay";

		
	default:
		cout << "Wring Day";
		PrintTheDay(  ReadPositiveNumber("Enter Another Number ! : \n"));
	}
}




int main()
{
	int Day = ReadPositiveNumber("Enter the Number of Days! \n");
	PrintTheDay(Day);

}

-------------------------------------------------------------
--solving problem 44 prof solution:
#include <iostream>
#include <string>

using namespace std;

enum enDayOfWeek {
	Sat=7,Sun=1,Mon=2,Tue=3,Wed=4,Thu=5,Fri=6,
};

int ReadNumberInRange(string Message, int From, int To)
{
	int Number = 0;

	do {
		cout << Message;
		cin >> Number;
	} while (Number < From || Number > To);
	return Number;
}
enDayOfWeek ReadDayOfWeek()
{
	return (enDayOfWeek)ReadNumberInRange("Enter The number of Day! \n",1,7);
}

string PrintTheDay(enDayOfWeek Day) {
	switch (Day)
	{
	case enDayOfWeek::Sun:
		return "It's SunDay";

	case enDayOfWeek::Mon:
		return  "It's MonDay";

	case enDayOfWeek::Tue:
		return  "It's TuesDay";

	case enDayOfWeek::Wed:
		return  "It's WensDay";

	case enDayOfWeek::Thu:
		return  "It's ThursDay";

	case enDayOfWeek::Fri:
		return  "It's FriDay";

	case enDayOfWeek::Sat:
		return  "It's SaturDay";
	default:
		return "Not Available";

	}
}




int main()
{

	cout<<PrintTheDay(ReadDayOfWeek())<<endl;

}

